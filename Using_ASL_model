{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\nimport tensorflow as tf\n\nimport matplotlib.pylab as plt\nfrom tensorflow import keras\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D\n\nfrom tensorflow.keras.optimizers import Adam\nfrom keras.callbacks import EarlyStopping\n\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\nfrom sklearn.model_selection import train_test_split\n\nimport os","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-02T11:51:44.849652Z","iopub.execute_input":"2024-05-02T11:51:44.850198Z","iopub.status.idle":"2024-05-02T11:51:44.859392Z","shell.execute_reply.started":"2024-05-02T11:51:44.850153Z","shell.execute_reply":"2024-05-02T11:51:44.857809Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":"**Loading in pre-trained model weights**","metadata":{}},{"cell_type":"code","source":"def make_model():\n    model = Sequential()\n\n    model.add(Conv2D(filters = 32, kernel_size = (5,5),padding = 'Same',activation ='relu', input_shape = (64,64,3)))\n    model.add(MaxPooling2D(pool_size = (2,2), strides = (2,2)))\n    model.add(Dropout(0.3))\n\n    model.add(Conv2D(filters = 64, kernel_size = (5,5),padding = 'Same',activation ='relu', input_shape = (150,150,3))) # why does input shape change to 150\n    model.add(MaxPooling2D(pool_size = (2,2), strides = (2,2)))\n    model.add(Dropout(0.3))\n\n    model.add(Conv2D(filters = 64, kernel_size = (5,5),padding = 'Same',activation ='relu', input_shape = (150,150,3)))\n    model.add(MaxPooling2D(pool_size = (2,2), strides = (2,2)))\n    model.add(Dropout(0.3))\n\n    model.add(Conv2D(filters = 128, kernel_size = (5,5),padding = 'Same',activation ='relu', input_shape = (150,150,3)))\n    model.add(MaxPooling2D(pool_size = (2,2), strides = (2,2)))\n\n    model.add(Flatten())\n    model.add(Dense(256))\n    # model.add(Activation('relu'))\n    model.add(Dense(29, activation = \"softmax\"))\n    model.compile(loss='categorical_crossentropy',optimizer=Adam(learning_rate=0.001),metrics=['accuracy'])\n    return model","metadata":{"execution":{"iopub.status.busy":"2024-05-02T11:52:14.490749Z","iopub.execute_input":"2024-05-02T11:52:14.491200Z","iopub.status.idle":"2024-05-02T11:52:14.505466Z","shell.execute_reply.started":"2024-05-02T11:52:14.491164Z","shell.execute_reply":"2024-05-02T11:52:14.503963Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"no_aug_model = make_model()\nno_aug_model.load_weights('/kaggle/input/model-weights/model_one_weights.weights.h5')","metadata":{"execution":{"iopub.status.busy":"2024-05-02T11:52:43.827417Z","iopub.execute_input":"2024-05-02T11:52:43.827878Z","iopub.status.idle":"2024-05-02T11:52:44.170975Z","shell.execute_reply.started":"2024-05-02T11:52:43.827841Z","shell.execute_reply":"2024-05-02T11:52:44.169510Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/saving/saving_lib.py:418: UserWarning: Skipping variable loading for optimizer 'adam', because it has 2 variables whereas the saved optimizer has 26 variables. \n  trackable.load_own_variables(weights_store.get(inner_path))\n","output_type":"stream"}]},{"cell_type":"code","source":"aug_model = make_model()\naug_model.load_weights('/kaggle/input/model-weights/aug_model_weights.weights.h5')","metadata":{"execution":{"iopub.status.busy":"2024-05-02T11:52:58.279829Z","iopub.execute_input":"2024-05-02T11:52:58.280325Z","iopub.status.idle":"2024-05-02T11:52:58.565190Z","shell.execute_reply.started":"2024-05-02T11:52:58.280284Z","shell.execute_reply":"2024-05-02T11:52:58.563738Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"def idx_to_letter(idx):\n    letters = 'abcdefghijklmnopqrstuvwxyz'\n    idx = idx[0]\n    if 0 <= idx < len(letters):\n        return letters[idx]\n    if idx == 26:\n        return 'nothing'\n    if idx == 27:\n        return '(space)'","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"image_path = '/kaggle/input/asl-alphabet/asl_alphabet_test/asl_alphabet_test/C_test.jpg'\nimage = keras.utils.load_img(image_path, target_size = (64,64))\ninput_data = keras.utils.img_to_array(image)\ninput_data = np.expand_dims(input_data, axis=0)\nprediction = no_aug_model.predict(input_data)\n\nclasses = np.argmax(prediction, axis = 1)\nprint(idx_to_letter(classes))\n# print(classes)","metadata":{"execution":{"iopub.status.busy":"2024-05-02T11:53:55.081023Z","iopub.execute_input":"2024-05-02T11:53:55.082786Z","iopub.status.idle":"2024-05-02T11:53:55.180647Z","shell.execute_reply.started":"2024-05-02T11:53:55.082692Z","shell.execute_reply":"2024-05-02T11:53:55.179344Z"},"trusted":true},"execution_count":29,"outputs":[{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step\nc\n","output_type":"stream"}]},{"cell_type":"markdown","source":"# Using Model trained without Data augmentation","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Using Model trained with Data augmentation","metadata":{}}]}